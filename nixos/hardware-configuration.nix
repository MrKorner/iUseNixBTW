# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "ahci" "xhci_pci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a505bb53-008f-4f92-8bde-86ca364baf54";
      fsType = "ext4";
    };
	
  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/d820d808-12a3-4f89-a591-25299990a6b2";
      fsType = "ext4";
    };  

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/1BC1-AFF5";
      fsType = "vfat";
    };  

  fileSystems."/mnt/Data" =
    { device = "/dev/disk/by-uuid/f6bf6cd6-65cb-433c-a1f7-6d10fcdd14e4";
      fsType = "ext4";
    };  


  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp13s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp14s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
